import { createStore, compose, applyMiddleware } from 'redux'
import createSagaMiddleware from 'redux-saga'

import { persistStore, persistReducer } from 'redux-persist'
import storage from '@react-native-community/async-storage'

import reducers from './ducks'
import sagas from './sagas'

const persistConfig = {
  key: 'root',
  storage,
  whitelist: ['onboarding'],
}

const middlewares = []

const sagaMiddleware = createSagaMiddleware()
middlewares.push(sagaMiddleware)

if (__DEV__) { // eslint-disable-line
  const createFlipperMiddleware = require('rn-redux-middleware-flipper').default
  middlewares.push(createFlipperMiddleware())
}

const composer = compose(applyMiddleware(...middlewares))

const persistedReducer = persistReducer(persistConfig, reducers)

const store = createStore(persistedReducer, composer)
const persistor = persistStore(store)

sagaMiddleware.run(sagas)

export { store, persistor }
