import { useReducer } from 'react'
import { createReducer, createActions } from 'reduxsauce';
import Immutable from 'seamless-immutable';

// Action Types & Creators

const { Types, Creators } = createActions({
  example: null,
};

export const <%= props.capitalizeName%>Types = Types;
export const <%= props.capitalizeName%>Actions = Creators;

// Initial State

export const INITIAL_STATE = Immutable({
  fieldname: false,
});

// Reducer Functions

const example = (state, { fieldname }) => ({
  ...state, fieldname: true
});

// Reducer

export const <%= props.capitalizeName%>Reducer = createReducer(INITIAL_STATE, {
  [Types.EXAMPLE]: example,
});


export default function () {
  const [state, dispatch] = useReducer(StateReducer, INITIAL_STATE);

  return { state, dispatch };
}


